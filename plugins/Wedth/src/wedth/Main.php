<?php namespace wedth;
 use pocketmine\event\Listener;
 use pocketmine\event\player\PlayerChatEvent;
 use pocketmine\command\CommandSender;
 use pocketmine\command\Command;
 use pocketmine\event\player\PlayerCommandPreprocessEvent;
 use pocketmine\command\CommandExecutor;
 use pocketmine\event\player\PlayerQuitEvent;
 use pocketmine\IPlayer;
 use pocketmine\Player;
 use pocketmine\plugin\PluginBase;
 use pocketmine\plugin\PluginManager;
 use pocketmine\plugin\Plugin;
 use pocketmine\utils\TextFormat;
 use pocketmine\Server;
 use pocketmine\utils\Config;
 use pocketmine\event\entity\EntityDamageEvent;
 use pocketmine\event\entity\EntityDamageByEntityEvent;
 use pocketmine\item\Item;
 class Main extends PluginBase implements Listener { public $verify;
 public $provider;
 public $temp = array();
 private $db;
 public function onEnable(){ @mkdir($this->getDataFolder());
 @mkdir($this->getDataFolder() . "Players/");
 $this->getServer()->getPluginManager()->registerEvents($this, $this);
 new Config($this->getDataFolder() . "config.yml", CONFIG::YAML, array( "players-in-same-group-are-friendly" => true, "friends-are-friendly" => true, "max-friends" => 2, "provider" => "SQL" ));
 if(!$this->getServer()->getPluginManager()->getPlugin("PurePerms")) { $this->getLogger()->info( TextFormat::RED . "PurePerms Not Loaded With Wedding!" );
 $this->verify = false;
 }else{ $this->pure = $this->getServer()->getPluginManager()->getPlugin("PurePerms");
 $this->getLogger()->info( TextFormat::GREEN . "PurePerms Loaded With Wedding!" );
 $this->verify = true;
 } if($this->getConfig()->get("provider") == "SQL") { $this->provider = "SQL";
 $this->db = new \SQLite3($this->getDataFolder() . "Wedding.db");
 $this->db->exec("CREATE TABLE IF NOT EXISTS friends(p1 VARCHAR, p2 VARCHAR);
");
 $this->getLogger()->info(TextFormat::GREEN . "Using SQL provider.");
 } elseif($this->getConfig()->get("provider") == "YML") { $this->provider = "YML";
 $this->getLogger()->info(TextFormat::GREEN . "Using YML provider.");
 } } public function onCommand(CommandSender $sender, Command $command, $label, array $args) { if($sender instanceof Player) { $player = strtolower($sender->getName());
 $pc = $sender->getName();
 if(strtolower($command->getName()) == "love") { if(empty($args)) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b] §d: §f/love §eaccept §a[§6เพื่อยอมรับคำขอ§a] §cdecline §a[§6ยกเลิกคำขอ§a]");
 return true;
 } if(strtolower($args[0]) !== "accept" && strtolower($args[0]) !== "decline" && strtolower($args[0]) !== "tp" && strtolower($args[0]) !== "list") { if(!isset($args[0])) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b] §d: §f/love §eaccept §a[§6เพื่อยอมรับคำขอ§a] §cdecline §a[§6ยกเลิกคำขอ§a]");
 return true;
 } $max = $this->getConfig()->get("max-friends");
 if(count($this->getAllFriends($player)) == $max) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§d :§e§l ไม่สามารถขอแต่งงานได้อีก");
 return;
 } $friendexact = $this->getServer()->getPlayer($args[0]);
 if(!$friendexact instanceof Player) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§d :§e อีกฝ่ายไม่ออนไลน์");
 return true;
 } $friend = strtolower($friendexact->getName());
 $fc = $friendexact->getName();
 if($this->areFriends($player, $friend)) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§d : §e'$fc'§6 ได้แต่งงานอยู่เเล้ว");
 return true;
 } if($this->getUserTEMP($player, $friend)) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§d :§a คุณได้ส่งคำขอแต่งงานให้ §e'$friend'");
 return true;
 } if(!file_exists($this->getDataFolder() . "Players/" . $player . ".yml")) { $this->temp[$player] = $friend;
 $sender->sendMessage(TextFormat::GOLD . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b] §d:§a ได้ทำการขอแต่งงานกับ§e '$fc'");
 $friendexact->sendMessage(TextFormat::GOLD . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§d :§e '$pc' §fขอคุณแต่งงาน คุณจะตอบรับหรือไม่ รับ §b/love §aaccept§f ตามด้วยชื่อ §fไม่รับ§b /love §cdecline");
 return true;
 } if(file_exists($this->getDataFolder() . "Players/" . $player . ".yml")) { $this->temp[$player] = $friend;
 $sender->sendMessage(TextFormat::GOLD . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§f :§e '$fc'§a ได้ทำการขอแต่งงาน");
 $friendexact->sendMessage(TextFormat::GOLD . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§d :§e '$pc' §fขอคุณแต่งงาน คุณจะตอบรับหรือไม่ รับ §b/love §aaccept§f ตามด้วยชื่อ §fไม่รับ§b /love §cdecline");
 return true;
 } } if(strtolower($args[0]) == "accept") { if(empty($args[1])) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b] §d:§c Usage§f:§d/love §6[§cdecline§f/§aaccept§6] §c<§fใส่ชื่อคู่แต่งงานที่ขอแต่ง§c>");
 return true;
 } $friendexact = $this->getServer()->getPlayer($args[1]);
 if(!$friendexact instanceof Player) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§d :§6 อีกฝ่ายไม่ออนไลน์");
 return true;
 } $getsender = strtolower($friendexact->getName());
 $friendname = $friendexact->getName();
 if(!$this->getUserTEMP($getsender, $player)) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§d :§6 หว่าแย่จังดูเหมือนจะไม่สามารถแต่งงานได้นะ");
 return true;
 } $playerget = strtolower($sender->getName());
 $this->removeUserTEMP($getsender, strtolower($sender->getName()));
 $this->setUser($getsender, $player);
 $fc = $friendexact->getName();
 $sender->sendMessage(TextFormat::GOLD . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§d :§a คุณได้ตอบตกลงการแต่งงานกับ §d'$pc'");
 $this->getServer()->broadcastMessage("§l§dข§fอ§dเ§fเ§dส§fด§dง§fค§dว§fา§dม§fย§dิ§fน§dด§fี §bก§aั§bบ§e '$fc' §fเเละ§f '$pc' §fจด§7ทะ§bเบียน§aสม§eรส §aก§fั§aน§fเ§aเ§fล§a้§fว§c!!");
 $friendexact->sendMessage(TextFormat::GOLD . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§d :§e '$player' §aตอบรับการแต่งงานของคุณ");
 $item1 = Item::get(403, 0, 1);
 $item1->setCustomName("§l§d❤§7ทะ§bเบียน§aสม§eรส§d❤\n§f'$fc'§4❤§f'$pc'\n§f§lขอให้รักกันไปนานๆ\n§fขอให้ลูกเต็มบ้านหลานเต็มเกาะ น๊ะจ๊ะ");
 $sender->getInventory()->addItem($item1);
 $item1 = Item::get(0, 0, 1);
 $item1->setCustomName("§cช่อดอกไม้ §fเจ้าสาว");
 $sender->getInventory()->addItem($item1);
 $item2 = Item::get(403, 0, 1);
 $item2->setCustomName("§l§d❤§7ทะ§bเบียน§aสม§eรส§d❤\n§f'$fc'§4❤§f'$pc'\n§f§lขอให้รักกันไปนานๆ\n§fขอให้ลูกเต็มบ้านหลานเต็มเกาะ น๊ะจ๊ะ");
 $friendexact->getInventory()->addItem($item2);
 $item2 = Item::get(0, 0, 1);
 $item2->setCustomName("§cช่อดอกไม้ §fเจ้าสาว");
 return true;
 } if(strtolower($args[0]) == "decline") { if(empty($args[1])) { $sender->sendMessage(TextFormat::RED . "§0[§dWed§5ding§0]§7 /love [decline/accept] <ใส่ชื่อคู่แต่งงาน>");
 return true;
 } $friendexact = $this->getServer()->getPlayer($args[1]);
 if(!$friendexact instanceof Player) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§d :§e อีกฝ่ายไม่ออนไลน์");
 return true;
 } $getsender = strtolower($friendexact->getName());
 if(!$this->getUserTEMP($getsender, $player)) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§d§f :§6 หว่าแย่จังดูเหมือนจะแต่งไม่ได้");
 return true;
 } $this->removeUserTEMP($getsender, $player);
 $sender->sendMessage(TextFormat::GOLD . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§f :§e คุณเลือกที่จะไม่ตอบตกลง  -0-");
 $friendexact->sendMessage(TextFormat::GOLD . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§f :§e เสียใจด้วย §f '$player' §6ไม่อยากแต่งงานกับคุณ");
 return true;
 } if(strtolower($args[0]) == "tp") { if(empty($args[1])) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§f :§c Usage:/love tp <player-name>");
 return true;
 } $friend = $this->getServer()->getPlayer($args[1]);
 if(!$friend instanceof Player) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§f :§e คู่แต่งงานของคุณไม่ออนไลน์");
 return true;
 } $fname = strtolower($friend->getName());
 $fc = $friend->getName();
 if(!$this->areFriends($player, $fname)) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§f :§f '$fc'§6 ไม่สามารถ tp ได้เขาไม่ใช้คู่เเต่งงานของคุณ");
 return true;
 } $name = $sender->getName();
 $sender->teleport($friend->getPosition(), $friend->getYaw(), $friend->getPitch());
 $sender->sendMessage(TextFormat::GOLD . "Teleporting to '$fc'...");
 $friend->sendMessage(TextFormat::GOLD . "'$name' has teleported to you.");
 return true;
 } if(strtolower($args[0]) == "list") { if(!$this->hasFriends($player)) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§f :§e คุณยังไม่มีคู่แต่งงาน");
 return;
 } $friends = $a = new Config($this->getDataFolder() . "Players/" . $player . ".yml", CONFIG::YAML);
 $msg = null;
 foreach($this->getAllFriends($player) as $friend => $p) { if($friend == 'p2') { $msg .= "$p, ";
 } } $sender->sendMessage(TextFormat::GRAY . "§bคู่แต่งงานของคุณ:§e $msg");
 return;
 } } if(strtolower($command->getName()) == "unlove") { if(empty($args[0])) { $sender->sendMessage(TextFormat::RED . "§0[§dWed§5ding§0]§7 /unlove <ใส่ชื่อคู่แต่งงาน>");
 return true;
 } $friend = strtolower($args[0]);
 if(!$this->areFriends($player, $friend)) { $sender->sendMessage(TextFormat::RED . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§f :§e '$friend' §6เขาไม่ได้เป็นคู่แต่งงานของคุณ");
 return true;
 } if($this->areFriends($player, $friend)) { $this->removeUser($player, $friend);
 $sender->sendMessage(TextFormat::GOLD . "§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§f :§e '$friend' §7ขอ§cหย่า§7กับคุณเเล้ว");
 $this->getServer()->broadcastMessage("§b§l[§fพ§7ร§fี§7เ§fว§7ด§fด§7ิ§f้§7ง§b]§f :§e §f คุณ§e '$friend' §c×§7❤§c× §e'$pc' §fได้หย่าร้างกันเเล้ว");
 $item12 = Item::get(403, 0, 1);
 $item12->setCustomName("§cใบหย่า§e '$friend'§4 X§e '$pc' \n§fเลิกกันเเล้วควรมองหน้าเเละ\nเป็นเพื่อนกันเหมือนเดิม");
 $sender->getInventory()->addItem($item12);
 } } } } public function getAllFriends($p1) { if($this->provider == "SQL") { $a = $this->db->query("SELECT * FROM friends WHERE p1='$p1';
");
 $b = $a->fetchArray(SQLITE3_ASSOC);
 return $b;
 } if($this->provider == "YML") { $a = new Config($this->getDataFolder() . "Players/" . $p1 . ".yml", CONFIG::YAML);
 $b = $a->getAll();
 return $b;
 } } public function removeUser($p1, $p2) { if($this->provider == "SQL") { $this->db->query("DELETE FROM friends WHERE p1='$p1' AND p2='$p2';
");
 $this->db->query("DELETE FROM friends WHERE p1='$p2' AND p2='$p1';
");
 return;
 } if($this->provider == "YML") { $a = new Config($this->getDataFolder() . "Players/" . $p1 . ".yml", CONFIG::YAML);
 $a->remove($p2);
 $a->save();
 $a = new Config($this->getDataFolder() . "Players/" . $p2 . ".yml", CONFIG::YAML);
 $a->remove($p1);
 $a->save();
 return;
 } } public function setUser($p1, $p2) { if($this->provider == "SQL") { $a = $this->db->prepare("INSERT INTO friends (p1, p2) VALUES (:p1, :p2);
");
 $a->bindValue(":p1", $p1);
 $a->bindValue(":p2", $p2);
 $result = $a->execute();
 $a = $this->db->prepare("INSERT INTO friends (p1, p2) VALUES (:p1, :p2);
");
 $a->bindValue(":p1", $p2);
 $a->bindValue(":p2", $p1);
 $result = $a->execute();
 return;
 } if($this->provider == "YML") { $a = new Config($this->getDataFolder() . "Players/" . $p1 . ".yml", CONFIG::YAML);
 $a->set("$p2", "TRUE");
 $a->save();
 $a = new Config($this->getDataFolder() . "Players/" . $p2 . ".yml", CONFIG::YAML);
 $a->set("$p1", "TRUE");
 $a->save();
 return;
 } } public function removeUserTEMP($p1, $p2) { if(isset($this->temp[$p1])) { if($this->temp[$p1] == $p2) { unset($this->temp[$p1]);
 return;
 } } return true;
 } public function removeLeaveTEMP($p1) { if(isset($this->temp[$p1])) { unset($this->temp[$p1]);
 return;
 } } public function getUserTEMP($p1, $p2) { if(isset($this->temp[$p1])) { if($this->temp[$p1] == $p2) { return true;
 } } } public function areFriends($p1, $p2) { if($this->provider == "SQL") { $a = $this->db->query("SELECT * FROM friends WHERE p1='$p1' AND p2='$p2';
");
 $b = $a->fetchArray(SQLITE3_ASSOC);
 return !empty($b);
 } if($this->provider == "YML") { $a = new Config($this->getDataFolder() . "Players/" . $p1 . ".yml", CONFIG::YAML);
 if($a->get("$p2")) { return;
 } else { return false;
 } } } public function hasFriends($p1) { if($this->provider == "SQL") { $a = $this->db->query("SELECT * FROM friends WHERE p1='$p1';
");
 $b = $a->fetchArray(SQLITE3_ASSOC);
 return !empty($b);
 } if($this->getDataFolder() . "Players/" . $player . ".yml") { return true;
 }else{ return false;
 } } public function onHurt(EntityDamageEvent $pf){ if($pf instanceof EntityDamageByEntityEvent) { if($pf->getDamager() instanceof Player && $pf->getEntity() instanceof Player) { $sender = $pf->getDamager();
 $reciever = $pf->getEntity();
 $friend1 = strtolower($pf->getEntity()->getName());
 $friend2 = strtolower($pf->getDamager()->getName());
 if($this->areFriends($friend1, $friend2) && $this->getConfig()->get("friends-are-friendly")) { $pf->setCancelled(true);
 }else{ return true;
 } } } } public function onPlayerQuitEvent(PlayerQuitEvent $pf){ $player = strtolower($pf->getPlayer()->getName());
 if($this->hasFriends($player)) { $this->removeLeaveTEMP($player);
 }else{ return true;
 } } }